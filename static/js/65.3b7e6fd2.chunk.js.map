{"version":3,"file":"static/js/65.3b7e6fd2.chunk.js","mappings":"oNACA,EAAwB,oBAAxB,EAAwD,wBAAxD,EAA4F,wB,SCI7E,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7B,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BL,GAASM,KAAKH,EAC1C,GAAE,CAACH,KAGF,+BACIE,IACiB,IAAhBA,EAAKK,QACJ,+DAEAL,EAAKM,KAAI,SAAAC,GACP,OACE,4BACE,kBACCA,EAAEC,MAAMC,SAAS,cAChB,oBAEA,gBAAKC,IAAKH,EAAEC,MAAOG,IAAKJ,EAAEK,KAAMC,UAAWC,KAE7C,eAAID,UAAWC,EAAf,SAA6BP,EAAEK,QAC/B,eAAGC,UAAWC,EAAd,cAA6BP,EAAEQ,UAA/B,SARQR,EAAES,OAWf,MAIV,C","sources":["webpack://react-homework-template/./src/Views/Cast/Cast.module.css?656a","Views/Cast/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"Cast_image__amDe6\",\"actorName\":\"Cast_actorName__tqyLL\",\"character\":\"Cast_character__aR5Cb\"};","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as getCastAPI from 'Services/index';\nimport s from './Cast.module.css';\n\nexport default function Cast({ movieId }) {\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    getCastAPI.getMovieCredits(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <>\n      {!cast ||\n        (cast.length === 0 ? (\n          <p>We dont't have casts for this movie</p>\n        ) : (\n          cast.map(e => {\n            return (\n              <div key={e.castId}>\n                <hr />\n                {e.photo.includes('w500/null') ? (\n                  <div></div>\n                ) : (\n                  <img src={e.photo} alt={e.name} className={s.image} />\n                )}\n                <h5 className={s.actorName}>{e.name}</h5>\n                <p className={s.character}> {e.character} </p>\n              </div>\n            );\n          })\n        ))}\n    </>\n  );\n}\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};"],"names":["Cast","movieId","useState","cast","setCast","useEffect","getCastAPI","then","length","map","e","photo","includes","src","alt","name","className","s","character","castId"],"sourceRoot":""}