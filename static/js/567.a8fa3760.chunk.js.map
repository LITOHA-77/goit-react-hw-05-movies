{"version":3,"file":"static/js/567.a8fa3760.chunk.js","mappings":"4TAEMA,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEmBC,IAAAA,IAAA,UACjBF,EADiB,sCACqBD,IAHxC,cAEGI,EAFH,OAMGC,EAAeD,EAAQE,KAAKC,QAAQC,KAAI,SAAAC,GAC5C,MAAO,CACLC,GAAID,EAAEC,GACNC,UAAWF,EAAEG,eAEhB,IAXE,kBAYIP,GAZJ,gCAcHQ,QAAQC,MAAR,MAdG,gFAiBA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kGAEmBb,IAAAA,IAAA,UACjBF,EADiB,gCACeD,EADf,iCAC2CgB,EAD3C,+BAFnB,cAEGZ,EAFH,OAKGC,EAAeD,EAAQE,KAAKC,QAAQC,KAAI,SAAAC,GAC5C,MAAO,CACLC,GAAID,EAAEC,GACNC,UAAWF,EAAEG,eAEhB,IAVE,kBAWIP,GAXJ,gCAaHQ,QAAQC,MAAR,MAbG,gFAiBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kGAEmBf,IAAAA,IAAA,UACjBF,EADiB,iBACAiB,EADA,oBACmBlB,EADnB,oBAFnB,cAEGI,EAFH,OAKGC,EAAe,CAACD,EAAQE,MAAME,KAAI,SAAAC,GACtC,MAAO,CACLU,OAAO,mCAAD,OAAqCV,EAAEW,aAC7CC,IAAKZ,EAAEa,QACPX,UAAWF,EAAEG,eACbW,UAA4B,GAAjBd,EAAEe,aACbC,SAAUhB,EAAEgB,SACZC,OAAQjB,EAAEiB,OAAOlB,KAAI,SAAAmB,GAAE,OAAIA,EAAGC,IAAP,IAE1B,IAdE,kBAeIvB,GAfJ,gCAiBHQ,QAAQC,MAAR,MAjBG,gFAqBA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA+BX,GAA/B,kGAEmBf,IAAAA,IAAA,UACjBF,EADiB,iBACAiB,EADA,4BAC2BlB,EAD3B,oBAFnB,cAEGI,EAFH,OAMGC,EAAeD,EAAQE,KAAKwB,KAAKtB,KAAI,SAAAC,GACzC,MAAO,CACLsB,OAAQtB,EAAEuB,QACVJ,KAAMnB,EAAEwB,cACRC,UAAWzB,EAAEyB,UACbC,MAAM,mCAAD,OAAqC1B,EAAE2B,cAE/C,IAbE,kBAcI/B,GAdJ,gCAgBHQ,QAAQC,MAAR,MAhBG,gFAoBA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnB,GAA/B,kGAEmBf,IAAAA,IAAA,UACjBF,EADiB,iBACAiB,EADA,4BAC2BlB,EAD3B,2BAFnB,cAEGI,EAFH,OAKGC,EAAeD,EAAQE,KAAKC,QAAQC,KAAI,SAAAC,GAC5C,MAAO,CACL6B,MAAO7B,EAAEC,GACT6B,OAAQ9B,EAAE8B,OACVC,OAAQ/B,EAAEgC,QAEb,IAXE,kBAYIpC,GAZJ,gCAcHQ,QAAQC,MAAR,MAdG,gF,+GC/EP,EAAwB,2B,SCGT,SAAS4B,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,eAAIC,UAAWC,EAAf,SAAyBF,GACjC,C,cCDc,SAASG,IACtB,OAA4BC,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA0BC,KAAKL,EAChC,GAAE,KAGD,iCACE,SAACP,EAAD,CAAaC,KAAK,mBAEjBK,IACC,+BACE,wBACGA,EAAOxC,KAAI,SAAAC,GAAC,OACX,yBACE,SAAC,KAAD,CACE8C,GAAI,CAAEC,SAAS,WAAD,OAAa/C,EAAEC,KAC7B+C,MAAO,CAAEC,KAAMR,EAASM,UAF1B,SAIG/C,EAAEE,aALEF,EAAEC,GADA,UAexB,C","sources":["Services/index.js","webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/index.jsx","Views/homePage/index.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '15859190bf14b9d850903e894168e9e6';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrending() {\n  try {\n    const request = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${KEY}`\n    );\n\n    const clearRequest = request.data.results.map(e => {\n      return {\n        id: e.id,\n        movieName: e.original_title,\n      };\n    });\n    return clearRequest;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function searchMovies(query) {\n  try {\n    const request = await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=true`\n    );\n    const clearRequest = request.data.results.map(e => {\n      return {\n        id: e.id,\n        movieName: e.original_title,\n      };\n    });\n    return clearRequest;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMmovieDetails(movieId) {\n  try {\n    const request = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    const clearRequest = [request.data].map(e => {\n      return {\n        poster: `https://image.tmdb.org/t/p/w500/${e.poster_path}`,\n        tag: e.tagline,\n        movieName: e.original_title,\n        userScore: e.vote_average * 10,\n        overview: e.overview,\n        genres: e.genres.map(el => el.name),\n      };\n    });\n    return clearRequest;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const request = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    const clearRequest = request.data.cast.map(e => {\n      return {\n        castId: e.cast_id,\n        name: e.original_name,\n        character: e.character,\n        photo: `https://image.tmdb.org/t/p/w500/${e.profile_path}`,\n      };\n    });\n    return clearRequest;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const request = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    const clearRequest = request.data.results.map(e => {\n      return {\n        revId: e.id,\n        author: e.author,\n        review: e.content,\n      };\n    });\n    return clearRequest;\n  } catch (error) {\n    console.error(error);\n  }\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import PropTypes from 'prop-types';\n\nimport s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n\nPageHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PageHeading from 'components/PageHeading';\nimport * as homePageAPI from 'Services/index';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    homePageAPI.getTrending().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <PageHeading text=\"Trending today\" />\n\n      {movies && (\n        <>\n          <ul>\n            {movies.map(e => (\n              <li key={e.id}>\n                <Link\n                  to={{ pathname: `/movies/${e.id}` }}\n                  state={{ from: location.pathname }}\n                >\n                  {e.movieName}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n}"],"names":["KEY","BASE_URL","getTrending","axios","request","clearRequest","data","results","map","e","id","movieName","original_title","console","error","searchMovies","query","getMmovieDetails","movieId","poster","poster_path","tag","tagline","userScore","vote_average","overview","genres","el","name","getMovieCredits","cast","castId","cast_id","original_name","character","photo","profile_path","getMovieReviews","revId","author","review","content","PageHeading","text","className","s","HomePage","useState","movies","setMovies","location","useLocation","useEffect","homePageAPI","then","to","pathname","state","from"],"sourceRoot":""}