{"version":3,"file":"static/js/225.b05d16e8.chunk.js","mappings":"8NAKe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA6BL,GAASM,KAAKH,EAC5C,GAAE,CAACH,KAGF,iCACE,kBACEE,GAA4B,IAAlBA,EAAOK,OAGjBL,EAAOM,KAAI,SAAAC,GACT,OACE,4BACE,wBAAKA,EAAEC,UACP,6BAAKD,EAAEP,OAAP,SAFQO,EAAEE,MAKf,KATD,uEAaP,C","sources":["Views/Reviews/index.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as getReviewAPI from 'Services/index';\n\n\nexport default function Reviews({ movieId }) {\n  const [review, setReview] = useState(null);\n\n  useEffect(() => {\n    getReviewAPI.getMovieReviews(movieId).then(setReview);\n  }, [movieId]);\n\n  return (\n    <>\n      <hr />\n      {!review || review.length === 0 ? (\n        <p>We dont't have any reviews for this movie</p>\n      ) : (\n        review.map(e => {\n          return (\n            <div key={e.revId}>\n              <h5>{e.author}</h5>\n              <p> {e.review} </p>\n            </div>\n          );\n        })\n      )}\n    </>\n  );\n}\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};"],"names":["Reviews","movieId","useState","review","setReview","useEffect","getReviewAPI","then","length","map","e","author","revId"],"sourceRoot":""}